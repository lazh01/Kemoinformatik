Running VM ---------------------------------------------------------
Executing code from 'doIt.py'
Executing code from 'rules.py'
End of code from 'rules.py'
Repeat, limit = 1000000000
   Substrat 0
   Got 1 graphs
   Substrat 1
   Got 3 graphs
   Substrat 2
   Got 7 graphs
   Substrat 3
   Got 9 graphs
   Substrat 4
   Got 10 graphs
   Substrat 5
   Got 9 graphs
   Substrat 6
   Got 7 graphs
   Substrat 7
   Got 3 graphs
   Substrat 8
   Got 1 graphs
   Substrat 9
   Got 1 graphs
   Substrat 10
   Got 1 graphs
   Substrat 11
   Got 1 graphs
   Substrat 12
   Got 3 graphs
   Substrat 13
   Got 5 graphs
   Substrat 14
   Got 7 graphs
   Substrat 15
   Got 7 graphs
   Substrat 16
   Got 6 graphs
   Substrat 17
   Got 3 graphs
   Substrat 18
   Got 1 graphs
   Substrat 19
   Got 1 graphs
   Substrat 20
   Got 1 graphs
   Substrat 21
   Got 1 graphs
   Substrat 22
   Got 2 graphs
   Substrat 23
   Got 3 graphs
   Substrat 24
   Got 4 graphs
   Substrat 25
   Got 4 graphs
   Substrat 26
   Got 2 graphs
   Substrat 27
   Got 1 graphs
   Substrat 28
   Got 1 graphs
   Substrat 29
   Got 1 graphs
   Substrat 30
   Got 1 graphs
   Substrat 31
   Got 1 graphs
   Substrat 32
   Got 1 graphs
   Substrat 33
   Got 1 graphs
   Substrat 34
   Got 1 graphs
   Substrat 35
   Got 0 graphs
Using user defined objective function: 0
Flow: ==========================================================================
DG: DGRuleComp(0)
Base: --------------------------------------------------------------------------
Sources: 'Start' 
Sinks:   'Goal' 
Allow hyper-loops: false
AllowReverse:      false
AllowIOReverse: true
Relaxed: false
OverallCatalysis: --------------------------------------------------------------
(disabled)
OverallAutocatalysis: ----------------------------------------------------------
(disabled)
Non-module: --------------------------------------------------------------------
ObjectiveFunction (user defined): 0
Extra int variables:
Extra constraints:
1 == inFlow('Start')
Solver:	EnumerateBy
absGap: 1073741824
maxNumSolutions: 1
enumerationVarSpecifier: <default>
transitEnumeration:
Base	#exploded transit edges	112
Base	#exploded transit edges no empty	112
Base	#transit edges, no opt	994
Base	#fixed variables	0
Flow	Adding user variables
Flow	Setting objective function
Notice: linear expression '0' is 0.
Flow	Adding user constraints
FlowBase	model created
Flow	num variables	1432
Solving using EnumerateBy
Enumeration by variable set (436 variables)
============================================================
AbstractSolver:  non-fixed enumeration vars: 214
Solving root node.
CPXPARAM_TimeLimit                               1073741824
CPXPARAM_Threads                                 1
CPXPARAM_MIP_Tolerances_MIPGap                   0
CPXPARAM_Emphasis_MIP                            2
CPXPARAM_MIP_Pool_Intensity                      4
CPXPARAM_MIP_Limits_Populate                     1
Infeasibility row 'c448':  0  = -1.
Presolve time = 0.00 sec. (0.58 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.70 ticks)
Sequential b&c:
  Real time             =    0.00 sec. (0.00 ticks)
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.70 ticks)
Flow	num solutions	0
Flow	Calculation done
End of code from 'doIt.py'

real	0m2.496s
user	0m0.745s
sys	0m0.090s
